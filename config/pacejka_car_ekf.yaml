# Description of configuration files can be found at "https://gitlab.ethz.ch/ics-group/projects/andrea/crs-2.0/-/wikis/ros-configuration"
type: "discrete_ekf"
pub_rate: 50.0 # Hz
measurement_timeout_threshold: 2.0 # seconds

# initial state
initial_state:
  type: "pacejka_car"
  value: [0, 0, 0, 0.5, 0, 0]

initial_input:
  type: "pacejka_car"
  value: [0.0, 0.4]

# initial P (state covariance matrix)
P_init:
  [
    [1, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0],
    [0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 1],
  ]

sensors:
  sensor_names: ["vicon", "imu"]
  vicon:
    R:
      value: [[0.001], [0.001], [0.001]]
      is_diag: true
    key: vicon # optional, if not set us e name of sensor

  imu:
    R:
      value: [[0.001], [0.001], [0.001]]
      is_diag: true
    key: imu # optional, if not set us e name of sensor


visualizer:
  rate: 10
  # car_ekf_visualizer will plot the covariance of the position estimate as a ellipsoid
  type: car_ekf_visualizer

  # Visualizer specific  parameters
  frame_id: crs_frame # default
  namespace: ekf # default

  use_arrows: true # If true, use arrows to visualize planned and reference yaw angle. This option is a lot slower and may introduce visual lags

  # Color of the covariance ellipsoid
  cov_r: 0
  cov_g: 0
  cov_b: 1
  cov_a: 0.3

  # Color of the estimated position
  est_r: 0
  est_g: 0
  est_b: 0
  est_a: 1

  size_x: 0.05 # 0.07 for arrows
  size_y: 0.05 # 0.02 for arrows
  size_z: 0.05 # 0.02 for arrows

  cov_scale: 100 # scales covariance ellipsoid by 100

# ============ THIS IS ENTIRELY OPTIONAL ============
# If this is not defiend, then the default model which is loaded, is from the ros paramaters located at /model
# This means that e.g. the EKF uses the same Q as the simulation -> EKF has perfect model and Q

model:
  # type describes what type of model we want to use / should be loaded
  type: "pacejka_discrete"

  # Q (process noise covariance matrix)
  Q:
    value:
      [
        [0.01, 0, 0, 0, 0, 0],
        [0, 0.01, 0, 0, 0, 0],
        [0, 0, 0.01, 0, 0, 0],
        [0, 0, 0, 0.0001, 0, 0],
        [0, 0, 0, 0, 0.0001, 0],
        [0, 0, 0, 0, 0, 0.0001],
      ]
    is_diag: false

#  model_params: # only change size and inertia of model
#    m: 0.200
#    I: 0.000605
